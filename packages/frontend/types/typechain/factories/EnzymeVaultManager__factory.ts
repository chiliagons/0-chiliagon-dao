/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EnzymeVaultManager,
  EnzymeVaultManagerInterface,
} from "../EnzymeVaultManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_IComptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToDeposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountMin",
        type: "uint256",
      },
    ],
    name: "depositFunds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enzymeVault",
    outputs: [
      {
        internalType: "contract IComptroller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "projectDetails",
    outputs: [
      {
        internalType: "uint256",
        name: "sliceOfThePiePerProject",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sliceRedeemed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemAllFunds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemSharesForMyProject",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approvedToVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_projectId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "setAttributes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ae838038062001ae88339818101604052810190620000379190620001cb565b620000576200004b620000e860201b60201c565b620000f060201b60201c565b6001808190555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001c58162000240565b92915050565b60008060408385031215620001df57600080fd5b6000620001ef85828601620001b4565b92505060206200020285828601620001b4565b9150509250929050565b6000620002198262000220565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200024b816200020c565b81146200025757600080fd5b50565b61187e806200026a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610152578063ad90ed9d14610170578063e6496b061461018e578063f2d72867146101ac578063f2fde38b146101de578063ff278a2f146101fa576100a9565b80631417cef8146100ae5780633fc8cef3146100ca57806361638ed5146100e85780636681f78914610118578063715018a614610148575b600080fd5b6100c860048036038101906100c39190610f5c565b610218565b005b6100d2610348565b6040516100df919061143f565b60405180910390f35b61010260048036038101906100fd9190611097565b61036e565b60405161010f9190611409565b60405180910390f35b610132600480360381019061012d91906110fc565b610834565b60405161013f9190611409565b60405180910390f35b610150610867565b005b61015a6108ef565b6040516101679190611319565b60405180910390f35b610178610918565b6040516101859190611409565b60405180910390f35b6101966109f2565b6040516101a39190611424565b60405180910390f35b6101c660048036038101906101c191906110d3565b610a18565b6040516101d5939291906114da565b60405180910390f35b6101f860048036038101906101f39190610f33565b610a42565b005b610202610b3a565b60405161020f9190611409565b60405180910390f35b610220610cbd565b73ffffffffffffffffffffffffffffffffffffffff1661023e6108ef565b73ffffffffffffffffffffffffffffffffffffffff1614610294576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028b9061147a565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b81526004016102f1929190611394565b602060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190611045565b505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600082600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016103ce929190611334565b60206040518083038186803b1580156103e657600080fd5b505afa1580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e919061106e565b101561045f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104569061149a565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016104be9392919061135d565b602060405180830381600087803b1580156104d857600080fd5b505af11580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105109190611045565b506000600167ffffffffffffffff811115610554577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156105825781602001602082028036833780820191505090505b5090506000600167ffffffffffffffff8111156105c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156105f65781602001602082028036833780820191505090505b5090506000600167ffffffffffffffff81111561063c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561066a5781602001602082028036833780820191505090505b50905030836000815181106106a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050858260008151811061071d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508481600081518110610764577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f9f585dd8484846040518463ffffffff1660e01b81526004016107cf939291906113bd565b600060405180830381600087803b1580156107e957600080fd5b505af11580156107fd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108269190611004565b506001935050505092915050565b600081600260008563ffffffff1663ffffffff168152602001908152602001600020600201819055506001905092915050565b61086f610cbd565b73ffffffffffffffffffffffffffffffffffffffff1661088d6108ef565b73ffffffffffffffffffffffffffffffffffffffff16146108e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108da9061147a565b60405180910390fd5b6108ed6000610cc5565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060026001541415610960576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610957906114ba565b60405180910390fd5b6002600181905550610970610cbd565b73ffffffffffffffffffffffffffffffffffffffff1661098e6108ef565b73ffffffffffffffffffffffffffffffffffffffff16146109e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109db9061147a565b60405180910390fd5b600190506001808190555090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090508060000154908060010154908060020154905083565b610a4a610cbd565b73ffffffffffffffffffffffffffffffffffffffff16610a686108ef565b73ffffffffffffffffffffffffffffffffffffffff1614610abe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab59061147a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b259061145a565b60405180910390fd5b610b3781610cc5565b50565b600060026001541415610b82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b79906114ba565b60405180910390fd5b6002600181905550610b92610cbd565b73ffffffffffffffffffffffffffffffffffffffff16610bb06108ef565b73ffffffffffffffffffffffffffffffffffffffff1614610c06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfd9061147a565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b460481d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c7057600080fd5b505af1158015610c84573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610cad9190610f98565b5050600190506001808190555090565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610d9c610d9784611536565b611511565b90508083825260208201905082856020860282011115610dbb57600080fd5b60005b85811015610deb5781610dd18882610e76565b845260208401935060208301925050600181019050610dbe565b5050509392505050565b6000610e08610e0384611562565b611511565b90508083825260208201905082856020860282011115610e2757600080fd5b60005b85811015610e575781610e3d8882610f09565b845260208401935060208301925050600181019050610e2a565b5050509392505050565b600081359050610e70816117ec565b92915050565b600081519050610e85816117ec565b92915050565b600082601f830112610e9c57600080fd5b8151610eac848260208601610d89565b91505092915050565b600082601f830112610ec657600080fd5b8151610ed6848260208601610df5565b91505092915050565b600081519050610eee81611803565b92915050565b600081359050610f038161181a565b92915050565b600081519050610f188161181a565b92915050565b600081359050610f2d81611831565b92915050565b600060208284031215610f4557600080fd5b6000610f5384828501610e61565b91505092915050565b60008060408385031215610f6f57600080fd5b6000610f7d85828601610e61565b9250506020610f8e85828601610ef4565b9150509250929050565b60008060408385031215610fab57600080fd5b600083015167ffffffffffffffff811115610fc557600080fd5b610fd185828601610e8b565b925050602083015167ffffffffffffffff811115610fee57600080fd5b610ffa85828601610eb5565b9150509250929050565b60006020828403121561101657600080fd5b600082015167ffffffffffffffff81111561103057600080fd5b61103c84828501610eb5565b91505092915050565b60006020828403121561105757600080fd5b600061106584828501610edf565b91505092915050565b60006020828403121561108057600080fd5b600061108e84828501610f09565b91505092915050565b600080604083850312156110aa57600080fd5b60006110b885828601610ef4565b92505060206110c985828601610ef4565b9150509250929050565b6000602082840312156110e557600080fd5b60006110f384828501610f1e565b91505092915050565b6000806040838503121561110f57600080fd5b600061111d85828601610f1e565b925050602061112e85828601610ef4565b9150509250929050565b60006111448383611168565b60208301905092915050565b600061115c83836112fb565b60208301905092915050565b61117181611611565b82525050565b61118081611611565b82525050565b6000611191826115ae565b61119b81856115de565b93506111a68361158e565b8060005b838110156111d75781516111be8882611138565b97506111c9836115c4565b9250506001810190506111aa565b5085935050505092915050565b60006111ef826115b9565b6111f981856115ef565b93506112048361159e565b8060005b8381101561123557815161121c8882611150565b9750611227836115d1565b925050600181019050611208565b5085935050505092915050565b61124b81611623565b82525050565b61125a81611669565b82525050565b6112698161168d565b82525050565b600061127c602683611600565b915061128782611722565b604082019050919050565b600061129f602083611600565b91506112aa82611771565b602082019050919050565b60006112c2601483611600565b91506112cd8261179a565b602082019050919050565b60006112e5601f83611600565b91506112f0826117c3565b602082019050919050565b6113048161164f565b82525050565b6113138161164f565b82525050565b600060208201905061132e6000830184611177565b92915050565b60006040820190506113496000830185611177565b6113566020830184611177565b9392505050565b60006060820190506113726000830186611177565b61137f6020830185611177565b61138c604083018461130a565b949350505050565b60006040820190506113a96000830185611177565b6113b6602083018461130a565b9392505050565b600060608201905081810360008301526113d78186611186565b905081810360208301526113eb81856111e4565b905081810360408301526113ff81846111e4565b9050949350505050565b600060208201905061141e6000830184611242565b92915050565b60006020820190506114396000830184611251565b92915050565b60006020820190506114546000830184611260565b92915050565b600060208201905081810360008301526114738161126f565b9050919050565b6000602082019050818103600083015261149381611292565b9050919050565b600060208201905081810360008301526114b3816112b5565b9050919050565b600060208201905081810360008301526114d3816112d8565b9050919050565b60006060820190506114ef600083018661130a565b6114fc602083018561130a565b611509604083018461130a565b949350505050565b600061151b61152c565b905061152782826116b1565b919050565b6000604051905090565b600067ffffffffffffffff821115611551576115506116e2565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561157d5761157c6116e2565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061161c8261162f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60006116748261167b565b9050919050565b60006116868261162f565b9050919050565b60006116988261169f565b9050919050565b60006116aa8261162f565b9050919050565b6116ba82611711565b810181811067ffffffffffffffff821117156116d9576116d86116e2565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6117f581611611565b811461180057600080fd5b50565b61180c81611623565b811461181757600080fd5b50565b6118238161164f565b811461182e57600080fd5b50565b61183a81611659565b811461184557600080fd5b5056fea26469706673582212207cd5a1d434288b5c3ce3ec78c97d814eab95e431e9dcd5ab4a567f3b7884916264736f6c63430008030033";

export class EnzymeVaultManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _IComptroller: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EnzymeVaultManager> {
    return super.deploy(
      _IComptroller,
      _weth,
      overrides || {}
    ) as Promise<EnzymeVaultManager>;
  }
  getDeployTransaction(
    _IComptroller: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_IComptroller, _weth, overrides || {});
  }
  attach(address: string): EnzymeVaultManager {
    return super.attach(address) as EnzymeVaultManager;
  }
  connect(signer: Signer): EnzymeVaultManager__factory {
    return super.connect(signer) as EnzymeVaultManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnzymeVaultManagerInterface {
    return new utils.Interface(_abi) as EnzymeVaultManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EnzymeVaultManager {
    return new Contract(address, _abi, signerOrProvider) as EnzymeVaultManager;
  }
}
