/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EnzymeVaultManager,
  EnzymeVaultManagerInterface,
} from "../EnzymeVaultManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_IComptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToDeposit",
        type: "uint256",
      },
    ],
    name: "depositFunds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enzymeVault",
    outputs: [
      {
        internalType: "contract IComptroller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToDeposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountMin",
        type: "uint256",
      },
    ],
    name: "investFunds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "projectDetails",
    outputs: [
      {
        internalType: "uint256",
        name: "sliceOfThePiePerProject",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sliceRedeemed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemAllFunds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approvedToVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_projectId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "setAttributes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001334380380620013348339818101604052810190620000379190620000d8565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000172565b600081519050620000d28162000158565b92915050565b60008060408385031215620000f257620000f162000153565b5b60006200010285828601620000c1565b92505060206200011585828601620000c1565b9150509250929050565b60006200012c8262000133565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b62000163816200011f565b81146200016f57600080fd5b50565b6111b280620001826000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636681f7891161005b5780636681f78914610127578063e6496b0614610157578063f2d7286714610175578063ff278a2f146101a757610088565b80631417cef81461008d5780633b76594d146100a95780633fc8cef3146100d95780635cdab97f146100f7575b600080fd5b6100a760048036038101906100a29190610979565b6101c5565b005b6100c360048036038101906100be9190610aa7565b610279565b6040516100d09190610dfb565b60405180910390f35b6100e1610425565b6040516100ee9190610e31565b60405180910390f35b610111600480360381019061010c9190610b01565b61044b565b60405161011e9190610dfb565b60405180910390f35b610141600480360381019061013c9190610b6e565b61068b565b60405161014e9190610dfb565b60405180910390f35b61015f6106bd565b60405161016c9190610e16565b60405180910390f35b61018f600480360381019061018a9190610b41565b6106e3565b60405161019e93929190610e6c565b60405180910390f35b6101af61070d565b6040516101bc9190610dfb565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b8152600401610222929190610d86565b602060405180830381600087803b15801561023c57600080fd5b505af1158015610250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102749190610a7a565b505050565b600081600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102d9929190610d26565b60206040518083038186803b1580156102f157600080fd5b505afa158015610305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103299190610ad4565b101561036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190610e4c565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016103c993929190610d4f565b602060405180830381600087803b1580156103e357600080fd5b505af11580156103f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041b9190610a7a565b5060019050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600167ffffffffffffffff811115610469576104686110a3565b5b6040519080825280602002602001820160405280156104975781602001602082028036833780820191505090505b5090506000600167ffffffffffffffff8111156104b7576104b66110a3565b5b6040519080825280602002602001820160405280156104e55781602001602082028036833780820191505090505b5090506000600167ffffffffffffffff811115610505576105046110a3565b5b6040519080825280602002602001820160405280156105335781602001602082028036833780820191505090505b509050308360008151811061054b5761054a611074565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050858260008151811061059a57610599611074565b5b60200260200101818152505084816000815181106105bb576105ba611074565b5b602002602001018181525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f9f585dd8484846040518463ffffffff1660e01b815260040161062693929190610daf565b600060405180830381600087803b15801561064057600080fd5b505af1158015610654573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061067d9190610a31565b506001935050505092915050565b6000816000808563ffffffff1663ffffffff168152602001908152602001600020600201819055506001905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090508060000154908060010154908060020154905083565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b460481d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561077957600080fd5b505af115801561078d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107b691906109b9565b50506001905090565b60006107d26107cd84610ec8565b610ea3565b905080838252602082019050828560208602820111156107f5576107f46110d7565b5b60005b85811015610825578161080b88826108b4565b8452602084019350602083019250506001810190506107f8565b5050509392505050565b600061084261083d84610ef4565b610ea3565b90508083825260208201905082856020860282011115610865576108646110d7565b5b60005b85811015610895578161087b888261094f565b845260208401935060208301925050600181019050610868565b5050509392505050565b6000813590506108ae81611120565b92915050565b6000815190506108c381611120565b92915050565b600082601f8301126108de576108dd6110d2565b5b81516108ee8482602086016107bf565b91505092915050565b600082601f83011261090c5761090b6110d2565b5b815161091c84826020860161082f565b91505092915050565b60008151905061093481611137565b92915050565b6000813590506109498161114e565b92915050565b60008151905061095e8161114e565b92915050565b60008135905061097381611165565b92915050565b600080604083850312156109905761098f6110e1565b5b600061099e8582860161089f565b92505060206109af8582860161093a565b9150509250929050565b600080604083850312156109d0576109cf6110e1565b5b600083015167ffffffffffffffff8111156109ee576109ed6110dc565b5b6109fa858286016108c9565b925050602083015167ffffffffffffffff811115610a1b57610a1a6110dc565b5b610a27858286016108f7565b9150509250929050565b600060208284031215610a4757610a466110e1565b5b600082015167ffffffffffffffff811115610a6557610a646110dc565b5b610a71848285016108f7565b91505092915050565b600060208284031215610a9057610a8f6110e1565b5b6000610a9e84828501610925565b91505092915050565b600060208284031215610abd57610abc6110e1565b5b6000610acb8482850161093a565b91505092915050565b600060208284031215610aea57610ae96110e1565b5b6000610af88482850161094f565b91505092915050565b60008060408385031215610b1857610b176110e1565b5b6000610b268582860161093a565b9250506020610b378582860161093a565b9150509250929050565b600060208284031215610b5757610b566110e1565b5b6000610b6584828501610964565b91505092915050565b60008060408385031215610b8557610b846110e1565b5b6000610b9385828601610964565b9250506020610ba48582860161093a565b9150509250929050565b6000610bba8383610bde565b60208301905092915050565b6000610bd28383610d08565b60208301905092915050565b610be781610fa3565b82525050565b610bf681610fa3565b82525050565b6000610c0782610f40565b610c118185610f70565b9350610c1c83610f20565b8060005b83811015610c4d578151610c348882610bae565b9750610c3f83610f56565b925050600181019050610c20565b5085935050505092915050565b6000610c6582610f4b565b610c6f8185610f81565b9350610c7a83610f30565b8060005b83811015610cab578151610c928882610bc6565b9750610c9d83610f63565b925050600181019050610c7e565b5085935050505092915050565b610cc181610fb5565b82525050565b610cd081610ffb565b82525050565b610cdf8161101f565b82525050565b6000610cf2601483610f92565b9150610cfd826110f7565b602082019050919050565b610d1181610fe1565b82525050565b610d2081610fe1565b82525050565b6000604082019050610d3b6000830185610bed565b610d486020830184610bed565b9392505050565b6000606082019050610d646000830186610bed565b610d716020830185610bed565b610d7e6040830184610d17565b949350505050565b6000604082019050610d9b6000830185610bed565b610da86020830184610d17565b9392505050565b60006060820190508181036000830152610dc98186610bfc565b90508181036020830152610ddd8185610c5a565b90508181036040830152610df18184610c5a565b9050949350505050565b6000602082019050610e106000830184610cb8565b92915050565b6000602082019050610e2b6000830184610cc7565b92915050565b6000602082019050610e466000830184610cd6565b92915050565b60006020820190508181036000830152610e6581610ce5565b9050919050565b6000606082019050610e816000830186610d17565b610e8e6020830185610d17565b610e9b6040830184610d17565b949350505050565b6000610ead610ebe565b9050610eb98282611043565b919050565b6000604051905090565b600067ffffffffffffffff821115610ee357610ee26110a3565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610f0f57610f0e6110a3565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610fae82610fc1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60006110068261100d565b9050919050565b600061101882610fc1565b9050919050565b600061102a82611031565b9050919050565b600061103c82610fc1565b9050919050565b61104c826110e6565b810181811067ffffffffffffffff8211171561106b5761106a6110a3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000600082015250565b61112981610fa3565b811461113457600080fd5b50565b61114081610fb5565b811461114b57600080fd5b50565b61115781610fe1565b811461116257600080fd5b50565b61116e81610feb565b811461117957600080fd5b5056fea26469706673582212200b20fab5c3d9435a1b8973b847f366ccedf9153e04849d1fc3de00d20676440464736f6c63430008060033";

export class EnzymeVaultManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _IComptroller: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EnzymeVaultManager> {
    return super.deploy(
      _IComptroller,
      _weth,
      overrides || {}
    ) as Promise<EnzymeVaultManager>;
  }
  getDeployTransaction(
    _IComptroller: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_IComptroller, _weth, overrides || {});
  }
  attach(address: string): EnzymeVaultManager {
    return super.attach(address) as EnzymeVaultManager;
  }
  connect(signer: Signer): EnzymeVaultManager__factory {
    return super.connect(signer) as EnzymeVaultManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnzymeVaultManagerInterface {
    return new utils.Interface(_abi) as EnzymeVaultManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EnzymeVaultManager {
    return new Contract(address, _abi, signerOrProvider) as EnzymeVaultManager;
  }
}
