/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EnzymeVaultManager,
  EnzymeVaultManagerInterface,
} from "../EnzymeVaultManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_IComptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToDeposit",
        type: "uint256",
      },
    ],
    name: "depositFunds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enzymeVault",
    outputs: [
      {
        internalType: "contract IComptroller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "projectDetails",
    outputs: [
      {
        internalType: "uint256",
        name: "sliceOfThePiePerProject",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sliceRedeemed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemAllFunds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_projectId",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "setAttributes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200138d3803806200138d8339818101604052810190620000379190620000d8565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000172565b600081519050620000d28162000158565b92915050565b60008060408385031215620000f257620000f162000153565b5b60006200010285828601620000c1565b92505060206200011585828601620000c1565b9150509250929050565b60006200012c8262000133565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b62000163816200011f565b81146200016f57600080fd5b50565b61120b80620001826000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633b76594d146100675780633fc8cef3146100975780636681f789146100b5578063e6496b06146100e5578063f2d7286714610103578063ff278a2f14610135575b600080fd5b610081600480360381019061007c9190610a6d565b610153565b60405161008e9190610d91565b60405180910390f35b61009f6105be565b6040516100ac9190610dc7565b60405180910390f35b6100cf60048036038101906100ca9190610af4565b6105e4565b6040516100dc9190610d91565b60405180910390f35b6100ed610616565b6040516100fa9190610dac565b60405180910390f35b61011d60048036038101906101189190610ac7565b61063c565b60405161012c93929190610e24565b60405180910390f35b61013d610666565b60405161014a9190610d91565b60405180910390f35b600081600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016101b3929190610ce5565b60206040518083038186803b1580156101cb57600080fd5b505afa1580156101df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102039190610a9a565b1015610244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023b90610e04565b60405180910390fd5b6102826040518060400160405280601481526020017f416c6c6f77616e636520636865636b20646f6e65000000000000000000000000815250610718565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016102e193929190610d0e565b602060405180830381600087803b1580156102fb57600080fd5b505af115801561030f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103339190610a40565b506103726040518060400160405280601381526020017f5472616e7366657220636865636b20646f6e6500000000000000000000000000815250610718565b6000600167ffffffffffffffff81111561038f5761038e6110fc565b5b6040519080825280602002602001820160405280156103bd5781602001602082028036833780820191505090505b5090506000600167ffffffffffffffff8111156103dd576103dc6110fc565b5b60405190808252806020026020018201604052801561040b5781602001602082028036833780820191505090505b5090506000600167ffffffffffffffff81111561042b5761042a6110fc565b5b6040519080825280602002602001820160405280156104595781602001602082028036833780820191505090505b5090503083600081518110610471576104706110cd565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084826000815181106104c0576104bf6110cd565b5b60200260200101818152505062989680856104db9190610f66565b816000815181106104ef576104ee6110cd565b5b602002602001018181525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f9f585dd8484846040518463ffffffff1660e01b815260040161055a93929190610d45565b600060405180830381600087803b15801561057457600080fd5b505af1158015610588573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105b191906109f7565b5060019350505050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000816000808563ffffffff1663ffffffff168152602001908152602001600020600201819055506001905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090508060000154908060010154908060020154905083565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b460481d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061070f919061097f565b50506001905090565b6107ae8160405160240161072c9190610de2565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107b1565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60006107ed6107e884610e80565b610e5b565b905080838252602082019050828560208602820111156108105761080f611130565b5b60005b85811015610840578161082688826108ba565b845260208401935060208301925050600181019050610813565b5050509392505050565b600061085d61085884610eac565b610e5b565b905080838252602082019050828560208602820111156108805761087f611130565b5b60005b858110156108b057816108968882610955565b845260208401935060208301925050600181019050610883565b5050509392505050565b6000815190506108c981611179565b92915050565b600082601f8301126108e4576108e361112b565b5b81516108f48482602086016107da565b91505092915050565b600082601f8301126109125761091161112b565b5b815161092284826020860161084a565b91505092915050565b60008151905061093a81611190565b92915050565b60008135905061094f816111a7565b92915050565b600081519050610964816111a7565b92915050565b600081359050610979816111be565b92915050565b600080604083850312156109965761099561113a565b5b600083015167ffffffffffffffff8111156109b4576109b3611135565b5b6109c0858286016108cf565b925050602083015167ffffffffffffffff8111156109e1576109e0611135565b5b6109ed858286016108fd565b9150509250929050565b600060208284031215610a0d57610a0c61113a565b5b600082015167ffffffffffffffff811115610a2b57610a2a611135565b5b610a37848285016108fd565b91505092915050565b600060208284031215610a5657610a5561113a565b5b6000610a648482850161092b565b91505092915050565b600060208284031215610a8357610a8261113a565b5b6000610a9184828501610940565b91505092915050565b600060208284031215610ab057610aaf61113a565b5b6000610abe84828501610955565b91505092915050565b600060208284031215610add57610adc61113a565b5b6000610aeb8482850161096a565b91505092915050565b60008060408385031215610b0b57610b0a61113a565b5b6000610b198582860161096a565b9250506020610b2a85828601610940565b9150509250929050565b6000610b408383610b64565b60208301905092915050565b6000610b588383610cc7565b60208301905092915050565b610b6d81610f9a565b82525050565b610b7c81610f9a565b82525050565b6000610b8d82610ef8565b610b978185610f33565b9350610ba283610ed8565b8060005b83811015610bd3578151610bba8882610b34565b9750610bc583610f19565b925050600181019050610ba6565b5085935050505092915050565b6000610beb82610f03565b610bf58185610f44565b9350610c0083610ee8565b8060005b83811015610c31578151610c188882610b4c565b9750610c2383610f26565b925050600181019050610c04565b5085935050505092915050565b610c4781610fac565b82525050565b610c5681610ff2565b82525050565b610c6581611016565b82525050565b6000610c7682610f0e565b610c808185610f55565b9350610c9081856020860161103a565b610c998161113f565b840191505092915050565b6000610cb1601483610f55565b9150610cbc82611150565b602082019050919050565b610cd081610fd8565b82525050565b610cdf81610fd8565b82525050565b6000604082019050610cfa6000830185610b73565b610d076020830184610b73565b9392505050565b6000606082019050610d236000830186610b73565b610d306020830185610b73565b610d3d6040830184610cd6565b949350505050565b60006060820190508181036000830152610d5f8186610b82565b90508181036020830152610d738185610be0565b90508181036040830152610d878184610be0565b9050949350505050565b6000602082019050610da66000830184610c3e565b92915050565b6000602082019050610dc16000830184610c4d565b92915050565b6000602082019050610ddc6000830184610c5c565b92915050565b60006020820190508181036000830152610dfc8184610c6b565b905092915050565b60006020820190508181036000830152610e1d81610ca4565b9050919050565b6000606082019050610e396000830186610cd6565b610e466020830185610cd6565b610e536040830184610cd6565b949350505050565b6000610e65610e76565b9050610e71828261106d565b919050565b6000604051905090565b600067ffffffffffffffff821115610e9b57610e9a6110fc565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610ec757610ec66110fc565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610f7182610fd8565b9150610f7c83610fd8565b925082821015610f8f57610f8e61109e565b5b828203905092915050565b6000610fa582610fb8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b6000610ffd82611004565b9050919050565b600061100f82610fb8565b9050919050565b600061102182611028565b9050919050565b600061103382610fb8565b9050919050565b60005b8381101561105857808201518184015260208101905061103d565b83811115611067576000848401525b50505050565b6110768261113f565b810181811067ffffffffffffffff82111715611095576110946110fc565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000600082015250565b61118281610f9a565b811461118d57600080fd5b50565b61119981610fac565b81146111a457600080fd5b50565b6111b081610fd8565b81146111bb57600080fd5b50565b6111c781610fe2565b81146111d257600080fd5b5056fea26469706673582212207d1e8c65cfb464e1d274899d3008b9917954d262730d7239a625d5bd5c7a893764736f6c63430008060033";

export class EnzymeVaultManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _IComptroller: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EnzymeVaultManager> {
    return super.deploy(
      _IComptroller,
      _weth,
      overrides || {}
    ) as Promise<EnzymeVaultManager>;
  }
  getDeployTransaction(
    _IComptroller: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_IComptroller, _weth, overrides || {});
  }
  attach(address: string): EnzymeVaultManager {
    return super.attach(address) as EnzymeVaultManager;
  }
  connect(signer: Signer): EnzymeVaultManager__factory {
    return super.connect(signer) as EnzymeVaultManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnzymeVaultManagerInterface {
    return new utils.Interface(_abi) as EnzymeVaultManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EnzymeVaultManager {
    return new Contract(address, _abi, signerOrProvider) as EnzymeVaultManager;
  }
}
